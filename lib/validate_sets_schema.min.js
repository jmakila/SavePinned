(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.validate20 = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$id":"sets","type":"object","patternProperties":{".*":{"type":"object","properties":{"autoload":{"type":"integer","minimum":0,"maximum":1},"set_name":{"type":"string"},"tabs":{"type":"array","items":{"type":"string"}}},"required":["autoload","set_name","tabs"],"additionalProperties":false}}};const pattern0 = new RegExp(".*", "u");function validate20(data, {dataPath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="sets" */;let vErrors = null;let errors = 0;if(data && typeof data == "object" && !Array.isArray(data)){var valid0 = true;for(const key0 in data){if(pattern0.test(key0)){let data0 = data[key0];const _errs0 = errors;if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if(((data0.autoload === undefined && (missing0 = "autoload")) || (data0.set_name === undefined && (missing0 = "set_name"))) || (data0.tabs === undefined && (missing0 = "tabs"))){validate20.errors = [{keyword:"required",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/patternProperties/.*/required",params:{missingProperty: missing0},message:"should have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key1 in data0){if(!(((key1 === "autoload") || (key1 === "set_name")) || (key1 === "tabs"))){validate20.errors = [{keyword:"additionalProperties",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/patternProperties/.*/additionalProperties",params:{additionalProperty: key1},message:"should NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data0.autoload !== undefined){let data1 = data0.autoload;const _errs2 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate20.errors = [{keyword:"type",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/autoload",schemaPath:"#/patternProperties/.*/properties/autoload/type",params:{type: "integer"},message:"should be integer"}];return false;}if((typeof data1 == "number") && (isFinite(data1))){if(data1 > 1 || isNaN(data1)){validate20.errors = [{keyword:"maximum",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/autoload",schemaPath:"#/patternProperties/.*/properties/autoload/maximum",params:{comparison: "<=", limit: 1},message:"should be <= 1"}];return false;}else {if(data1 < 0 || isNaN(data1)){validate20.errors = [{keyword:"minimum",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/autoload",schemaPath:"#/patternProperties/.*/properties/autoload/minimum",params:{comparison: ">=", limit: 0},message:"should be >= 0"}];return false;}}}var valid1 = _errs2 === errors;}else {var valid1 = true;}if(valid1){if(data0.set_name !== undefined){const _errs3 = errors;if(typeof data0.set_name !== "string"){validate20.errors = [{keyword:"type",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/set_name",schemaPath:"#/patternProperties/.*/properties/set_name/type",params:{type: "string"},message:"should be string"}];return false;}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data0.tabs !== undefined){let data3 = data0.tabs;const _errs4 = errors;if(Array.isArray(data3)){const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(typeof data3[i0] !== "string"){validate20.errors = [{keyword:"type",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/tabs/" + i0,schemaPath:"#/patternProperties/.*/properties/tabs/items/type",params:{type: "string"},message:"should be string"}];return false;}var valid2 = _errs5 === errors;if(!valid2){break;}}}else {validate20.errors = [{keyword:"type",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1")+"/tabs",schemaPath:"#/patternProperties/.*/properties/tabs/type",params:{type: "array"},message:"should be array"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}}}}}}else {validate20.errors = [{keyword:"type",dataPath:dataPath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/patternProperties/.*/type",params:{type: "object"},message:"should be object"}];return false;}var valid0 = _errs0 === errors;if(!valid0){break;}}}}else {validate20.errors = [{keyword:"type",dataPath,schemaPath:"#/type",params:{type: "object"},message:"should be object"}];return false;}validate20.errors = vErrors;return errors === 0;}
},{}]},{},[1])(1)
});
